apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-backend"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          ports:
            - containerPort: {{ .Values.backend.service.port }}
          env:
            - name: spring.datasource.url
              value: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
            - name: spring.data.redis.host
              value: "{{ .Release.Name }}-redis"
            
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgres-secret"
                  key: postgres-username
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-postgres-secret"
                  key: postgres-password
            - name: spring.data.redis.password
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-redis-secret"
                  key: redis-password
            - name: jwt.secret
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-backend-secret"
                  key: jwt-secret
            - name: ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-backend-secret"
                  key: root-password