# Spring Boot properties for PostgreSQL profile
spring.datasource.driverClassName=org.postgresql.Driver
# URL, username, password will be injected via environment variables:
# SPRING_DATASOURCE_URL
# SPRING_DATASOURCE_USERNAME
# SPRING_DATASOURCE_PASSWORD

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update 
spring.jpa.show-sql=true 

# Disable Redis repository scanning to avoid warnings
spring.data.redis.repositories.enabled=false

# Redis configuration will be injected via environment variables:
# SPRING_DATA_REDIS_HOST
# SPRING_DATA_REDIS_PORT
# SPRING_DATA_REDIS_PASSWORD

# H2 Console (disable if not needed for this profile)
spring.h2.console.enabled=false

# CORS config will be injected via environment variables:
# CORS_ALLOWED_ORIGINS

# Database connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# Management server port (separate from main application port)
management.server.port=8081

# Monitoring configuration for production
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.prometheus.access=unrestricted
management.endpoint.metrics.access=unrestricted
management.endpoint.health.access=unrestricted
management.endpoint.info.access=unrestricted
management.endpoint.health.show-details=when-authorized

# Prometheus metrics export configuration
management.prometheus.metrics.export.enabled=true
management.endpoints.web.base-path=/actuator