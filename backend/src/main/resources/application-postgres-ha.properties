# Spring Boot properties for PostgreSQL HA profile
# This extends the postgres profile with HA-specific configurations

# Primary data source (default Spring Boot DataSource for writes)
spring.datasource.driverClassName=org.postgresql.Driver
# SPRING_DATASOURCE_URL will be injected via environment variables

# HA-specific configurations (if POSTGRES_HA_ENABLED=true)
# Additional data source configurations for read/write splitting
# These can be used by custom DataSource configurations if implemented

# Read replica configuration (optional for custom implementation)
# SPRING_DATASOURCE_READ_URL will be injected via environment variables
# SPRING_DATASOURCE_PRIMARY_URL will be injected via environment variables

# Database connection pool settings for HA
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000

# Connection validation for HA with retry
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=10000

# Database initialization retry settings
spring.datasource.hikari.initialization-fail-timeout=60000

# JPA settings optimized for HA
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Connection pool health monitoring
spring.datasource.hikari.register-mbeans=true
spring.datasource.hikari.leak-detection-threshold=60000

# Disable Redis repository scanning
spring.data.redis.repositories.enabled=false

# H2 Console (disabled for production)
spring.h2.console.enabled=false

# Management server port (separate from main application port)
management.server.port=8081

# Monitoring configuration for production
# Expose health, info, prometheus, and metrics endpoints
management.endpoints.web.exposure.include=health,info,prometheus,metrics

# Endpoint access configuration (Spring Boot 3+ way)
management.endpoint.prometheus.access=unrestricted
management.endpoint.metrics.access=unrestricted
management.endpoint.health.access=unrestricted
management.endpoint.info.access=unrestricted

# Health endpoint security (for production - limited details)
management.endpoint.health.show-details=when-authorized

# Prometheus metrics export configuration (correct for Spring Boot 3+)
management.prometheus.metrics.export.enabled=true

# Management endpoints base path and configuration
management.endpoints.web.base-path=/actuator